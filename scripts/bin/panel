#!/bin/bash
#
# Panel using lemonbar.

if [[ $(pgrep -cx panel) -gt 1 ]]; then
  printf "%s\n" "The panel is already running." >&2
  exit 1
fi

trap "trap - TERM; kill 0" INT TERM QUIT EXIT

if [ ! -f ~/.env ]; then
    export WIFI_INTERFACE='wlp7s0'
    export BATTERY='BAT0'
    export AC_ADAPTER='ADP1'
else
    . ~/.env
fi

# if scale factor not set, set to one
if [ -z ${HIDPI_SCALE_FACTOR+x} ]; then
    HIDPI_SCALE_FACTOR=1
fi

. panel_colors

HEIGHT=$(echo "24 * $HIDPI_SCALE_FACTOR" | bc)
LINE_HEIGHT=$(echo "2 * $HIDPI_SCALE_FACTOR" | bc)
FONT="Roboto Mono:size=8"
ICON_FONT="Font Awesome 6 Free:style=Solid:size=10"
FIFO=/tmp/panel-fifo

# Track the current offset for making a bar per monitor, so we can make bars with specific geometries.
CUR_X_OFFSET=0

num_mon="$(bspc query -M)"

for i in $num_mon; do

    [[ -e "$FIFO$i" ]] && rm "$FIFO$i"
    mkfifo "$FIFO$i"

    bspc config top_padding $HEIGHT

    bspc subscribe > "$FIFO$i" &
    xtitle -sf "T%s\n" -t 100 > "$FIFO$i" &
    while date +"C %a %d %b  %H:%M:%S"; do sleep 1; done > "$FIFO$i" &

    cpu_temp > "$FIFO$i" &

    if [ -n "$WIFI_INTERFACE" ]; then
        while true;
        do
            if [ -z "$WIFI_INTERFACE" ]; then
                echo "set your WIFI_INTERFACE in ~/.env"
                exit
            fi
            # ip addr | grep "$WIFI_INTERFACE" &>/dev/null
            SSID=$(iwgetid -r)
            SIGNAL=$(wifi_signal)
            if [ ! "$SSID" = "" ]; then
                echo -e 'E\uf1eb' "$SSID(${SIGNAL}dBm)"
            else
                echo -e 'E\uf1eb' " no wifi"
            fi
            sleep 15
        done > "$FIFO$i" &
    fi

    panel_volume &

    eval "${BATTERY_INFO_SCRIPT:-battery_info}" > "$FIFO$i" &
    while true;
    do
        sleep 30
        eval "${BATTERY_INFO_SCRIPT:-battery_info}"
    done > "$FIFO$i" &

    CURRENT_MONITOR_WIDTH=$(bspc query -T -m $i | jq ".rectangle.width")

    panel_bar < "$FIFO$i" | lemonbar \
		-n "lemonbar${i}" \
        -g $CURRENT_MONITOR_WIDTH"x"$HEIGHT+$CUR_X_OFFSET+0 \
        -f "$FONT" \
        -f "$ICON_FONT" \
        -F "$COLOR_FOREGROUND" \
        -B "$COLOR_BACKGROUND" \
        -a 20 \
        -u "$LINE_HEIGHT" | sh &

    # Increment the x offset for the next monitor.
    CUR_X_OFFSET=$(( CUR_X_OFFSET + CURRENT_MONITOR_WIDTH ))

	wid=$(xdo id -a "lemonbar${i}")
	tries_left=20
	while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
		sleep 0.05
		wid=$(xdo id -a "lemonbar${i}")
		tries_left=$((tries_left - 1))
	done
	[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

done

wait
